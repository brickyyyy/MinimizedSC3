// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ED1
arma::mat ED1(const arma::mat& x);
RcppExport SEXP _SC3min_ED1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(ED1(x));
    return rcpp_result_gen;
END_RCPP
}
// ED2
Rcpp::NumericMatrix ED2(const Rcpp::NumericMatrix& x);
RcppExport SEXP _SC3min_ED2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(ED2(x));
    return rcpp_result_gen;
END_RCPP
}
// consmx
arma::mat consmx(const arma::mat dat);
RcppExport SEXP _SC3min_consmx(SEXP datSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type dat(datSEXP);
    rcpp_result_gen = Rcpp::wrap(consmx(dat));
    return rcpp_result_gen;
END_RCPP
}
// consensus
arma::mat consensus(const arma::mat matrix, int k);
RcppExport SEXP _SC3min_consensus(SEXP matrixSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type matrix(matrixSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(consensus(matrix, k));
    return rcpp_result_gen;
END_RCPP
}
// norm_laplacian
arma::mat norm_laplacian(arma::mat A);
RcppExport SEXP _SC3min_norm_laplacian(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(norm_laplacian(A));
    return rcpp_result_gen;
END_RCPP
}
// tmult
arma::mat tmult(arma::mat x);
RcppExport SEXP _SC3min_tmult(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(tmult(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SC3min_ED1", (DL_FUNC) &_SC3min_ED1, 1},
    {"_SC3min_ED2", (DL_FUNC) &_SC3min_ED2, 1},
    {"_SC3min_consmx", (DL_FUNC) &_SC3min_consmx, 1},
    {"_SC3min_consensus", (DL_FUNC) &_SC3min_consensus, 2},
    {"_SC3min_norm_laplacian", (DL_FUNC) &_SC3min_norm_laplacian, 1},
    {"_SC3min_tmult", (DL_FUNC) &_SC3min_tmult, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_SC3min(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
